#to inherite methods
class Animals:
     animalType= " Memal"
class pets:
    color= "white"
class Dog:
    @staticmethod
    def bark():
       print(" sound ")
d= Dog()   
d.bark()

#use of increment and property decorator
class Employee:
    salary= 1000 
    increment= 2
    @property
    def salaryAfterIncrement(self):
       return self.salary *self.increment
    @salaryAfterIncrement.setter
    def salaryAfterIncrement(self,sai):
       self. increment= sai/self.salary
e=Employee()
print(e.salaryAfterIncrement)
print(e.increment)
e.salaryAfterIncrement= 3000
print(e.increment)

#complex numbers multiplie and addition
class complex:
    def __init__(self,r,i) :
        self.real=r
        self.imaginary=i
    def __add__(self,c):
        return complex(self.real + c.real, self.imaginary + c.imaginary)
    def __mul__(self,c):
        mulReal = self.real*c.real - self.imaginary*c.imaginary
        mulimg = self.real*c.imaginary + self.imaginary*c.real
        return complex(mulReal,mulimg)
    def __str__(self):
        return f"{self.real}+{self.imaginary}i"

c1= complex(1,4)
c2=complex(8,5)
print(c1+c2)
print(c1*c2)
